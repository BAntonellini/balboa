name: Test and Check on Pull Request

on:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Pull Request CI
    runs-on: ubuntu-latest

    env:
      DBT_USER: ${{ secrets.DBT_USER }}
      DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
      DBT_DATABASE: ${{ secrets.DBT_DATABASE }}_PR_${{ github.event.number }}
      DBT_PROFILES_DIR: /github/workspace/automate
      DBT_HOME: /github/workspace/transform
      DBT_SNOWFLAKE_ACCOUNT: ${{ secrets.DBT_SNOWFLAKE_ACCOUNT }}
      DBT_SNOWFLAKE_ROLE: ${{ secrets.DBT_SNOWFLAKE_ROLE }}
      DBT_SNOWFLAKE_WAREHOUSE: ${{ secrets.DBT_SNOWFLAKE_WAREHOUSE }}
      DATACOVES__YAML_DAGS_FOLDER: /opt/airflow/dags/repo/balboa.git/schedule
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags/repo/balboa.git/automate/airflow/dags

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Install dbt packages
        uses: datacoves/dbt-coves-action@v1.1
        with:
          dbt_project_folder: "transform"
          command: "dbt deps"

      - name: Create PR database
        uses: datacoves/dbt-coves-action@v1.1
        with:
          dbt_project_folder: "transform"
          command: "dbt --no-write-json run-operation create_database"

      - name: Run governance checks
        uses: datacoves/dbt-coves-action@v1.1
        with:
          dbt_project_folder: "transform"
          command: "dbt-coves check --no-fix"

      - name: Run dbt build
        uses: datacoves/dbt-coves-action@v1.1
        with:
          dbt_project_folder: "transform"
          command: "dbt build --defer --state logs --select state:modified+"

      - name: Grant access to PR database
        uses: datacoves/dbt-coves-action@v1.1
        with:
          dbt_project_folder: "transform"
          command: "dbt --no-write-json run-operation grant_access_to_pr_database"

      - name: Init Airflow DB
        uses: datacoves/ci-airflow-action@v0.4.0
        with:
          command: "airflow db init"

      - name: Test Airflow DAGs validity
        uses: datacoves/ci-airflow-action@v0.4.0
        with:
          command: "python /dagbag_validator.py"
